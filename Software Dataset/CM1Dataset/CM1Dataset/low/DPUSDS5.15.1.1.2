Initialization	The task invokes the initialization function dcxInit() which sets an instance variable, allocates the compression queue and mutual exclusion semaphore, creates the dcxTask() wakeup (data availability) semaphore, and initializes internal data structures.  Once initialization is complete, the task enters an “infinite” loop to process data on the compression queue until the queue is empty or until pre-empted by another task.  The task initially blocks on a binary “wakeup” semaphore which is given anytime new data is placed on the compression queue.  If the compression queue is emptied, the task will again block on the semaphore until more data is available.